services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    AssoConnect\ValidatorBundle\Validator\ConstraintsSetProvider\:
        resource: '../src/Validator/ConstraintsSetProvider/*'

    Pdp\Storage\:
        resource: '../../../jeremykendall/php-domain-parser/src/Storage/*'

    pdp.cache:
        class: Symfony\Component\Cache\Psr16Cache
        arguments:
            $pool: '@pdp.cache.pool'

    pdp.cache.pool:
        class: Symfony\Component\Cache\Adapter\FilesystemAdapter
        arguments:
            $namespace: 'jeremykendall_php-domain-parser'
            $directory: '%kernel.cache_dir%'

    Pdp\Storage\PublicSuffixListClient: '@Pdp\Storage\RulesStorage'

    Pdp\Storage\RulesStorage:
        arguments:
            $client: '@Pdp\Storage\PublicSuffixListPsr18Client'
            $cache: '@Pdp\Storage\PublicSuffixListPsr16Cache'

    Pdp\Storage\PublicSuffixListPsr16Cache:
        arguments:
            $cache: '@pdp.cache'

    AssoConnect\ValidatorBundle\Cache\PublicSuffixListCacheWarmer:
        tags:
            - { name: kernel.cache_warmer }

    AssoConnect\ValidatorBundle\Validator\Constraints\EmailValidator:
        tags:
            - validator.constraint_validator

    AssoConnect\ValidatorBundle\Validator\Constraints\EntityValidator:
        class: AssoConnect\ValidatorBundle\Validator\Constraints\EntityValidator
        arguments:
            $fieldConstraintsSetFactories: !tagged_iterator assoconnect.validator_bundle.factory.field